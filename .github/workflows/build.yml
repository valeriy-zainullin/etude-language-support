name: Build

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'master'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Set up apt packages
        run: sudo apt update && sudo apt install nodejs npm build-essential gcc g++ make ninja-build cmake libboost-dev libboost-filesystem-dev
      - name: Set up npm packages
        run: npm install
      - name: Build
        run: make && mv package.vsix package.linux-arm64.vsix
      - uses: actions/upload-artifact@v4
        with:
          name: package.linux-arm64
          path: package.linux-arm64.vsix
  build-linux-amd64:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Set up apt packages
        run: sudo apt update && sudo apt install nodejs npm build-essential gcc g++ make ninja-build cmake libboost-dev libboost-filesystem-dev
      - name: Set up npm packages
        run: npm install
      - name: Build
        run: make && mv package.vsix package.linux-amd64.vsix
      - uses: actions/upload-artifact@v4
        with:
          name: package.linux-amd64
          path: package.linux-amd64.vsix
  build-windows-amd64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git submodule sync --recursive
          git -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Set up chocolatey packages
        run: choco install cmake make nodejs
      - name: Set up npm packages
        run: npm install
      - name: Build
        run: make -f Makefile.windows && move package.vsix package.windows-amd64.vsix
      - uses: actions/upload-artifact@v4
        with:
          name: package.windows-amd64
          path: package.windows-amd64.vsix
  # Нужно собирать boost 1.76 из исходников, в brew очень новая версия, с ней не собирается liblsp.
  # build-macos-amd64:
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Checkout submodules
  #       run: |
  #         # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
  #         git config --global url."https://github.com/".insteadOf "git@github.com:"
  #         git submodule sync --recursive
  #         git -c protocol.version=2 submodule update --init --force --recursive --depth=1
  #     - name: Set up brew packages
  #       run: brew install cmake make nodejs boost
  #     - name: Set up npm packages
  #       run: npm install
  #     - name: Build
  #       run: CFLAGS='-Wno-unknown-warning-option' CXXFLAGS='-Wno-unknown-warning-option' make && mv package.vsix package.macos-amd64.vsix
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: package.macos-amd64
  #         path: package.macos-amd64.vsix
  # build-macos-arm64:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Checkout submodules
  #       run: |
  #         # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
  #         git config --global url."https://github.com/".insteadOf "git@github.com:"
  #         git submodule sync --recursive
  #         git -c protocol.version=2 submodule update --init --force --recursive --depth=1
  #     - name: Set up brew packages
  #       run: brew install cmake make nodejs boost
  #     - name: Set up npm packages
  #       run: npm install
  #     - name: Build boost 1.76 (needed for liblsp)
  #       run: |
  #         git clone https://github.com/boostorg/boost.git
  #         cd boost
  #         git checkout boost-1.83.0
  #         git submodule update --init --recursive
  #     - name: Build
  #       run: CFLAGS='-Wno-unknown-warning-option' CXXFLAGS='-Wno-unknown-warning-option' make && mv package.vsix package.macos-amd64.vsix
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: package.macos-arm64
  #         path: package.macos-arm64.vsix
  release:
    runs-on: ubuntu-24.04
    needs:
      - build-linux-arm64
      - build-linux-amd64
      - build-windows-amd64
      # - build-macos-amd64
      # - build-macos-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: make release name
        run: |
          authored_date=$(date -u -d @$(git --no-pager log -1 --pretty='format:%at' ${GITHUB_REF}) +%Y%m%d)
          echo "release_name=${authored_date}-$(git rev-parse --short ${GITHUB_REF})" >> $GITHUB_OUTPUT
        id: release_name
      - name: Download package for linux-arm64
        uses: actions/download-artifact@v4
        with:
          name: package.linux-arm64
          path: ./
      - name: Download package for linux-amd64
        uses: actions/download-artifact@v4
        with:
          name: package.linux-amd64
          path: ./
      - name: Download package for windows-amd64
        uses: actions/download-artifact@v4
        with:
          name: package.windows-amd64
          path: ./
      # - name: Download package for macos-amd64
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: package.macos-amd64
      #     path: ./
      # - name: Download package for macos-arm64
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: package.macos-arm64
      #     path: ./
      - name: List files
        run: ls /opt
      - name: tag
        run: |
          authored_date=$(date -u -d @$(git --no-pager log -1 --pretty='format:%at' ${GITHUB_REF}) +%Y%m%d)
          git tag ${authored_date}-$(git rev-parse --short ${GITHUB_REF})
          git push --tags
      - uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.release_name.outputs.release_name }}
          tag_name: ${{ steps.release_name.outputs.release_name }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux-arm64 package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.linux-arm64.vsix
          asset_name: etude-vscode.${{ steps.release_name.outputs.release_name }}.linux-arm64.vsix
          asset_content_type: application/octet-stream
      - name: upload linux-amd64 package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.linux-amd64.vsix
          asset_name: etude-vscode.${{ steps.release_name.outputs.release_name }}.linux-amd64.vsix
          asset_content_type: application/octet-stream
      - name: upload windows-amd64 package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.windows-amd64.vsix
          asset_name: etude-vscode.${{ steps.release_name.outputs.release_name }}.windows-amd64.vsix
          asset_content_type: application/octet-stream
      # - name: upload macos-amd64 package
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./package.macos-amd64.vsix
      #     asset_name: etude-vscode.${{ steps.release_name.outputs.release_name }}.macos-amd64.vsix
      #     asset_content_type: application/octet-stream
      # - name: upload macos-arm64 package
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./package.macos-arm64.vsix
      #     asset_name: etude-vscode.${{ steps.release_name.outputs.release_name }}.macos-arm64.vsix
      #     asset_content_type: application/octet-stream
